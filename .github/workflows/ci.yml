name: CI

on:
  pull_request:
    branches: ["**"]
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write # needed to publish releases

jobs:
  # ---------- PR checks: Linux only ----------
  pr_check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: rust:1-slim-bookworm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup component add rustfmt clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Rustfmt (check)
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        run: cargo test --all-features --locked

  # ---------- Tagged release builds ----------
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            container: messense/rust-musl-cross:x86_64-musl
            target: x86_64-unknown-linux-musl
            artifact_suffix: linux-musl
          - os: windows-latest
            container: ""
            target: x86_64-pc-windows-msvc
            artifact_suffix: windows-msvc
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # cargo-release needs tags

      - name: Set up Rust
        if: matrix.container == ''
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup target add ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Package artifact
        shell: bash
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/* dist/ || true
          cd dist
          tar czf ../${{ github.event.repository.name }}-${{ matrix.artifact_suffix }}.tar.gz ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.artifact_suffix }}
          path: ${{ github.event.repository.name }}-${{ matrix.artifact_suffix }}.tar.gz

      - name: Publish GitHub release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.event.repository.name }}-linux-musl.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
